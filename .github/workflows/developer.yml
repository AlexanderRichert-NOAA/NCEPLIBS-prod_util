# This is a GitHub actions workflow for the NCEPLIBS-prod_util project.
#
# This workflow builds as the developer would, with develop branch of
# bacio and w3emc, with documentation build and code coverage.
#
# Ed Hartnett 10/9/23
name: developer
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

jobs:
  developer:
    runs-on: ubuntu-latest
    env:
      FC: gfortran
      CC: gcc

    steps:

    - name: install-dependencies
      run: sudo apt-get install doxygen gcovr

    - name: "Build dependencies"
      uses: NOAA-EMC/ci-build-nceplibs@develop
      with:
        bacio-version: develop
        w3emc-version: develop
        w3emc-cmake-args: -DBUILD_WITH_BUFR=OFF

    - name: checkout-prod_util
      uses: actions/checkout@v4
      with:
        path: prod_util

    - name: build-prod_util
      run: |
        cmake -S prod_util -B prod_util/build -DCMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/nceplibs/NCEPLIBS-bacio;$GITHUB_WORKSPACE/nceplibs/NCEPLIBS-w3emc" -DCMAKE_Fortran_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall" -DCMAKE_C_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall" -DCMAKE_INSTALL_PREFIX=~/prod_util/install -DENABLE_DOCS=ON
        cmake --build prod_util/build --parallel 2 --verbose
        ctest --test-dir prod_util/build --output-on-failure --verbose
        cd prod_util/build
        gcovr --root .. -v --html-details --exclude ../tests --exclude CMakeFiles --print-summary -o test-coverage.html &> /dev/null
        cd ../..
        cmake --install prod_util/build
        ls -l ~/prod_util/install/bin/fsync_file || exit 1

    - name: upload-test-coverage
      uses: actions/upload-artifact@v4
      with:
        name: prod_util-test-coverage
        path: |
          prod_util/*.html
          prod_util/*.css

        
